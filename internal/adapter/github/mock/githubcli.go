// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m-zajac/goprojectdemo/internal/app (interfaces: GithubClient)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	app "github.com/m-zajac/goprojectdemo/internal/app"
	reflect "reflect"
)

// MockGithubClient is a mock of GithubClient interface
type MockGithubClient struct {
	ctrl     *gomock.Controller
	recorder *MockGithubClientMockRecorder
}

// MockGithubClientMockRecorder is the mock recorder for MockGithubClient
type MockGithubClientMockRecorder struct {
	mock *MockGithubClient
}

// NewMockGithubClient creates a new mock instance
func NewMockGithubClient(ctrl *gomock.Controller) *MockGithubClient {
	mock := &MockGithubClient{ctrl: ctrl}
	mock.recorder = &MockGithubClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGithubClient) EXPECT() *MockGithubClientMockRecorder {
	return m.recorder
}

// ProjectsByLanguage mocks base method
func (m *MockGithubClient) ProjectsByLanguage(arg0 context.Context, arg1 string, arg2 int) ([]app.Project, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProjectsByLanguage", arg0, arg1, arg2)
	ret0, _ := ret[0].([]app.Project)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProjectsByLanguage indicates an expected call of ProjectsByLanguage
func (mr *MockGithubClientMockRecorder) ProjectsByLanguage(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProjectsByLanguage", reflect.TypeOf((*MockGithubClient)(nil).ProjectsByLanguage), arg0, arg1, arg2)
}

// StatsByProject mocks base method
func (m *MockGithubClient) StatsByProject(arg0 context.Context, arg1, arg2 string) ([]app.ContributorStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StatsByProject", arg0, arg1, arg2)
	ret0, _ := ret[0].([]app.ContributorStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StatsByProject indicates an expected call of StatsByProject
func (mr *MockGithubClientMockRecorder) StatsByProject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StatsByProject", reflect.TypeOf((*MockGithubClient)(nil).StatsByProject), arg0, arg1, arg2)
}
